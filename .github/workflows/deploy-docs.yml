name: ü´• deploy-docs
on:
  workflow_call:
    inputs:
      api-url:
        type: string
      aws-account-id:
        type: string
      aws-region:
        type: string
      distribution-id:
        type: string
      docs-s3-bucket:
        type: string
      domain:
        type: string
      stage-name:
        type: string
jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    environment:
      # ETX Relaxnews account is all in one
      name: ci_etx-production
    container:
      image: node:18-alpine
    env:
      API_URL: ${{ inputs.api-url }}
      AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
      AWS_REGION: ${{ inputs.aws-region }}
      DISTRIBUTION_ID: ${{ inputs.distribution-id }}
      DOCS_S3_BUCKET: ${{ inputs.docs-s3-bucket }}
      DOMAIN: ${{ inputs.domain }}
      STAGE_NAME: ${{ inputs.stage-name }}
    steps:
    - name: Install alpine packages
      run: |
        apk add --no-cache tar git python3 aws-cli
        ln -sf python3 /usr/bin/python
        python3 -m venv .venv
        . .venv/bin/activate
        python3 -m ensurepip
    - name: Setup Git
      run: git config --global --add safe.directory /__w/product-voxa/product-voxa
    - name: ‚¨áÔ∏è Checkout
      id: checkout
      uses: actions/checkout@v4
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: '${{ vars.AWS_ACCESS_KEY_ID }}'
        aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        aws-region: 'eu-west-1'
    - name: ü•° Setup pnpm
      id: setup-pnpm
      uses: pnpm/action-setup@v3
      with:
        version: latest-8
        run_install: false
    - name: ü™¢ Setup node
      id: setup-node
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'pnpm'
    - name: üöÄ Deploy to AWS
      run: |
        rm -f .env
        pnpm install --ignore-scripts
        sed -i "s|const apiUrl = '.*';|const apiUrl = '${API_URL}';|g" apps/docs/template.hbs
        sed -i '/servers:/{:a;N;/\n\s*-\s*url:/!ba;s#^\(\s*servers:\s*-\s*url:\s*\).*#\1'"${API_URL}"'#}' apps/docs/openapi.yaml
        sed -i "s|\[API_URL\]|${API_URL}|g" apps/docs/content/description-changelog.md
        npx lerna run build --scope docs
    - run: aws s3 sync apps/docs/dist s3://$DOCS_S3_BUCKET --acl public-read
    - name: Invalidate Cloudfront Distribution
      run: aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
